import express from 'express';
import { Server } from 'socket.io';
import { createServer } from 'http'
// import { emit } from 'process';

const myPort = 3000;

const App = express();
const server = createServer(App)

const io = new Server(server, {
  cors: {
    origin: 'http://localhost:5173',
    methods: ["GET", "POST"],
    credentials: true,
  }
})

App.get("/", (Request, res) => {
  res.send('salam alíkúm')
})


const getRandomColor = () => {
  const letters = "0123456789ABCDEF";
  let color = "#";
  for (let i = 0; i < 6; i++) {
    color += letters[Math.floor(Math.random() * 16)];
  }
  return color;
};


io.on("connection", (socket) => {
  // console.log('úser connected ', "id ", socket.id);

  //   USUALLY_WE_DO_IT_IN_FRONTEND
  // =====
  const cooloor = getRandomColor()

  socket.emit("specific-color", cooloor);
  let name_id = ''
  socket.on("user", (a) => {
    name_id = a;   // ✅ save username in socket.data
    console.log("Username set:", name_id, "for socket:", socket.id);
    socket.broadcast.emit('userwelcome', `User ${name_id || 'Anonymous'} joined the server.`);

  });

  socket.broadcast.emit('welcome', '= USER = JOINED to ren-3 Server IS ' + name_id + '::' + socket.id);

  socket.on("mesage", (values) => {
    console.log(':================= ', values, "<->", cooloor, '..:..', socket.id,);

    io.emit("mesage-toAll", values, socket.id, cooloor, name_id);
    // if(values) socket.broadcast.emit("mesage-toAll", values,socket.id)
  })

  socket.on('disconnect', () => {
    socket.broadcast.emit('user left', `User ${socket.id} has left.`);
    console.log('disconnected ', socket.id)
  })
})

server.listen(myPort, () => {
  console.log(`server is running on myPort ${myPort}`);

});